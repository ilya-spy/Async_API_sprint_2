services:
  api:
    build:
      context: api
    image: api-image
    depends_on:
      - elastic
      - redis
    environment:
      - REDIS_HOST
      - REDIS_PORT
      - ELASTIC_SCHEMA
      - ELASTIC_HOST
      - ELASTIC_PORT
      - APP_HOST=${API_HOST}
      - APP_PORT=${API_PORT}
      - DEBUG
    expose:
      - "${API_PORT}"
    ports:
      - "127.0.0.1:8000:${API_PORT}"
    volumes:
      - ./api:/app

  indexer:
    build:
      context: indexer
    depends_on:
      - postgres
      - elastic
      - redis
    environment:
      - REDIS_HOST
      - ELASTIC_SCHEMA
      - ELASTIC_HOST
      - ELASTIC_PORT
      - DB_HOST
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - DEBUG
    volumes:
      - ./indexer:/app

  admin-panel:
    image: agorobets/admin-panel:latest
    environment:
      - DB_HOST
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - SECRET_KEY
      - DEBUG
    volumes:
      - admin-panel-static:/app/static
    depends_on:
      - postgres

  tests:
    image: api-image
    environment:
      - REDIS_HOST
      - REDIS_PORT
      - ELASTIC_SCHEMA
      - ELASTIC_HOST
      - ELASTIC_PORT
      - API_HOST
      - API_PORT
    entrypoint: >
      sh -c "pip install -r /app/tests/functional/requirements.txt
      && python3 /app/tests/functional/utils/wait_for_es.py
      && python3 /app/tests/functional/utils/wait_for_redis.py
      && pytest /app/tests/functional/src"

  postgres:
    image: agorobets/admin-panel-postgres:latest
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - "${DB_PORT}"
    ports:
      - "127.0.0.1:5432:${DB_PORT}"

  elastic:
    build:
      context: elastic
    environment:
      - 'ES_JAVA_OPTS=-Xms200m -Xmx200m'
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
    expose:
      - "${ELASTIC_PORT}"
    ports:
      - "127.0.0.1:9200:${ELASTIC_PORT}"

  redis:
    image: redis:7.0.0-alpine
    expose:
      - "${REDIS_PORT}"
    ports:
      - "127.0.0.1:6379:${REDIS_PORT}"

  nginx:
    image: nginx:1.19.2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - admin-panel-static:/data/static
    depends_on:
      - admin-panel
      - api
    ports:
      - "80:80"

volumes:
  admin-panel-static:
